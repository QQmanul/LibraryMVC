@model BookIndexViewModel
@{
    ViewData["Title"] = "Каталог книг";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Добавить новую книгу</a>
</p>

@if (Model.Books.Any())
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Books.First().Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Books.First().Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Books.First().YearPublished)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Books.First().Genre)
                </th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Model.Books)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => book.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => book.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => book.YearPublished)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => book.Genre)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@book.Id" class="btn btn-sm btn-outline-secondary">Изменить</a> |
                        <a asp-action="Details" asp-route-id="@book.Id" class="btn btn-sm btn-outline-info">Подробнее</a> |
                        <a asp-action="Delete" asp-route-id="@book.Id" class="btn btn-sm btn-outline-danger">Удалить</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Books pagination">
        <ul class="pagination justify-content-center">

            @{
                string prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            }
            <li class="page-item @prevDisabled">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" class="page-link">Назад</a>
            </li>

            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a asp-action="Index" asp-route-pageNumber="@i" class="page-link">@i</a>
                </li>
            }

            @{
                string nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }
            <li class="page-item @nextDisabled">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" class="page-link">Вперед</a>
            </li>
        </ul>
    </nav>
    <div class="text-center">
        Страница @Model.PageNumber из @Model.TotalPages
    </div>
}
else
{
    <div class="alert alert-info" role="alert">
        В каталоге пока нет книг. Вы можете <a asp-action="Create">добавить первую</a>.
    </div>
}